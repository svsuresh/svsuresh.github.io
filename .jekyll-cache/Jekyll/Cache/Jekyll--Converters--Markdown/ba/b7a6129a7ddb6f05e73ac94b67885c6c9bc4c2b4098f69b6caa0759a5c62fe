I"44<p>Recently there is a request from user to split the data frame based on
the column names. Column names contain identical strings, but separated
by “_”. User request is to group identical columns, print their values,
followed by transposition of data frame. Let me explain with an example
below</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">d</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">read.table</span><span class="p">(</span><span class="n">text</span><span class="w"> </span><span class="o">=</span><span class="s2">"
 2-1 3-1 3-2 4-1 4-2 4-3
GeneA 0.514 0.535 0.436 0.530 0.388 0.418
GeneB 0.111 0.222 0.333 0.444 0.555 0.666"</span><span class="p">,</span><span class="w"> 
                </span><span class="n">check.names</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="kc">FALSE</span><span class="p">)</span><span class="w">

</span><span class="n">print</span><span class="p">(</span><span class="n">d</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>##         2-1   3-1   3-2   4-1   4-2   4-3
## GeneA 0.514 0.535 0.436 0.530 0.388 0.418
## GeneB 0.111 0.222 0.333 0.444 0.555 0.666
</code></pre></div></div>

<p>Now user wants columns 2,3,4 be the row names and fill up the missing
series starting from 1. Now values for each column group (group 3 for
3-1,3-2 columns), must be presented in columns. Confused? Look at the
below solution. But first let us load the libraries.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">dplyr</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## 
## Attaching package: 'dplyr'

## The following objects are masked from 'package:stats':
## 
##     filter, lag

## The following objects are masked from 'package:base':
## 
##     intersect, setdiff, setequal, union
</code></pre></div></div>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">library</span><span class="p">(</span><span class="n">tidyr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">tibble</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">stringr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="w"> </span><span class="p">(</span><span class="n">splitstackshape</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">purrr</span><span class="p">)</span><span class="w">
</span></code></pre></div></div>

<p>Now let us do the work.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">d</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">rownames_to_column</span><span class="p">(</span><span class="s2">"genes"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
    </span><span class="n">pivot_longer</span><span class="p">(</span><span class="o">-</span><span class="n">genes</span><span class="p">,</span><span class="n">names_to</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"k"</span><span class="p">,</span><span class="w"> </span><span class="n">values_to</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"v"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">mutate</span><span class="p">(</span><span class="n">k</span><span class="o">=</span><span class="n">str_split_fixed</span><span class="p">(</span><span class="n">k</span><span class="p">,</span><span class="s2">"-"</span><span class="p">,</span><span class="m">2</span><span class="p">)[,</span><span class="m">1</span><span class="p">],</span><span class="w">
           </span><span class="n">k</span><span class="o">=</span><span class="nf">as.integer</span><span class="p">(</span><span class="n">k</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
    </span><span class="n">group_by</span><span class="p">(</span><span class="n">genes</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">group_map</span><span class="p">(</span><span class="o">~</span><span class="p">{</span><span class="w">
        </span><span class="n">tibble</span><span class="p">(</span><span class="n">complete</span><span class="p">(</span><span class="n">k</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="nf">max</span><span class="p">(</span><span class="n">k</span><span class="p">),</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">list</span><span class="p">(</span><span class="n">vol</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0</span><span class="p">),</span><span class="n">data</span><span class="o">=</span><span class="n">.x</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
            </span><span class="n">group_by</span><span class="p">(</span><span class="n">k</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
            </span><span class="n">mutate</span><span class="p">(</span><span class="n">v</span><span class="o">=</span><span class="n">paste</span><span class="p">(</span><span class="n">v</span><span class="p">,</span><span class="w"> </span><span class="n">collapse</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">","</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
            </span><span class="n">distinct</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
            </span><span class="n">ungroup</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> 
            </span><span class="n">cSplit</span><span class="w"> </span><span class="p">(</span><span class="n">.</span><span class="p">,</span><span class="s2">"v"</span><span class="p">)</span><span class="w">
            </span><span class="p">)</span><span class="w">
    </span><span class="p">})</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## [[1]]
## # A tibble: 4 x 4
##       k    v_1    v_2    v_3
##   &lt;int&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;
## 1     1 NA     NA     NA    
## 2     2  0.514 NA     NA    
## 3     3  0.535  0.436 NA    
## 4     4  0.53   0.388  0.418
## 
## [[2]]
## # A tibble: 4 x 4
##       k    v_1    v_2    v_3
##   &lt;int&gt;  &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;
## 1     1 NA     NA     NA    
## 2     2  0.111 NA     NA    
## 3     3  0.222  0.333 NA    
## 4     4  0.444  0.555  0.666
</code></pre></div></div>

<p>This would print two lists without list name.One of the side effects of
using <code class="language-plaintext highlighter-rouge">group_map</code> is that you would loose list names which is not good.
You need to write another function for this. There is another way to do
the same.</p>

<div class="language-r highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">d</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">rownames_to_column</span><span class="p">(</span><span class="s2">"genes"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">pivot_longer</span><span class="p">(</span><span class="o">-</span><span class="n">genes</span><span class="p">,</span><span class="w"> </span><span class="n">names_to</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"k"</span><span class="p">,</span><span class="w"> </span><span class="n">values_to</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"v"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">mutate</span><span class="p">(</span><span class="n">k</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">str_split_fixed</span><span class="p">(</span><span class="n">k</span><span class="p">,</span><span class="w"> </span><span class="s2">"-"</span><span class="p">,</span><span class="w"> </span><span class="m">2</span><span class="p">)[,</span><span class="w"> </span><span class="m">1</span><span class="p">],</span><span class="w">
           </span><span class="n">k</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">as.integer</span><span class="p">(</span><span class="n">k</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">group_by</span><span class="p">(</span><span class="n">genes</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">complete</span><span class="p">(</span><span class="n">k</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">1</span><span class="o">:</span><span class="nf">max</span><span class="p">(</span><span class="n">k</span><span class="p">),</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">list</span><span class="p">(</span><span class="n">vol</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">group_by</span><span class="p">(</span><span class="n">genes</span><span class="p">,</span><span class="w"> </span><span class="n">k</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">mutate</span><span class="p">(</span><span class="n">v</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">paste</span><span class="p">(</span><span class="n">v</span><span class="p">,</span><span class="w"> </span><span class="n">collapse</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">","</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">distinct</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">ungroup</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">cSplit</span><span class="p">(</span><span class="n">.</span><span class="p">,</span><span class="w"> </span><span class="s2">"v"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">split</span><span class="p">(</span><span class="n">.</span><span class="o">$</span><span class="n">genes</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
    </span><span class="n">map</span><span class="p">(</span><span class="n">.</span><span class="p">,</span><span class="w"> </span><span class="o">~</span><span class="w"> </span><span class="p">(</span><span class="n">data</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">.x</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w"> </span><span class="n">select</span><span class="p">(</span><span class="o">-</span><span class="n">genes</span><span class="p">)))</span><span class="w">
</span></code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## $GeneA
##    k   v_1   v_2   v_3
## 1: 1    NA    NA    NA
## 2: 2 0.514    NA    NA
## 3: 3 0.535 0.436    NA
## 4: 4 0.530 0.388 0.418
## 
## $GeneB
##    k   v_1   v_2   v_3
## 1: 1    NA    NA    NA
## 2: 2 0.111    NA    NA
## 3: 3 0.222 0.333    NA
## 4: 4 0.444 0.555 0.666
</code></pre></div></div>

<p>Now this prints lists with names which is good :).</p>
:ET